name: test
on: [push, pull_request]

jobs:
  # test if job is redundant
  # https://github.com/marketplace/actions/skip-duplicate-actions
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          paths_ignore: '["**/README.md", "**/docs/**"]'
  test:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    env:
      ENV: "development"

      # db variables for django
      DB_NAME: "secure_my_spot_dev"
      DB_USER: "svengerlach"
      DB_PASSWORD: "123456789"
      DB_HOST: "db"
      DB_PORT: "5432"
      SECRET: ${{ secrets.DJANGO_SECRET_KEY }}

      # Django env settings
      DJANGO_SETTINGS_MODULE: "secure_my_spot.settings"

      # db var for postgres db docker service
      POSTGRES_USER: "svengerlach"
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: "secure_my_spot_dev"

      # python settings
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"

      # Rabbitmq vars
      RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_DEFAULT_USER }}
      RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_DEFAULT_PASS }}

      # Redis vars
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

      # Stripe vars
      STRIPE_API_TEST_KEY: ${{ secrets.STRIPE_API_TEST_KEY }}

    steps:
      - uses: actions/checkout@v1
      - name: Build the docker-compose stack
        # https://github.community/t/how-to-use-docker-compose-with-github-actions/16850/3
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d --build
      - name: Check running containers
        run: docker ps -a
      - name: Check logs django
        run: docker logs django
      - name: Check logs postgres
        run: docker logs postgres
      - name: Check logs worker
        run: docker logs celery
      - name: Check logs broker
        run: docker logs rabbit
      - name: Check logs redis
        run: docker logs redis
      - name: Run pytest
        run: docker exec django coverage run -m pytest
      - name: Run flake8
        run: docker exec django flake8 secure_my_spot/ app/ --max-line-length=100 --exclude=__init__.py,migrations
      - name: Run black
        run: docker exec django black secure_my_spot/ app/ --extend-exclude=migrations --check
      - name: Run isort
        run: docker exec django isort secure_my_spot/ app/ --profile black --check